<?xml version="1.0"?>
<doc>
    <assembly>
        <name>backend</name>
    </assembly>
    <members>
        <member name="M:OpenData.Controllers.MetadataController.GetMetadata(System.String)">
            <summary>
            Returns a single metadata type, and all its associated metadata entries.
            </summary> 
        </member>
        <member name="M:OpenData.Controllers.MetadataTypeController.GetMetadataTypeDeepCopy(System.String)">
            <summary>
            Returns a single metadata type, and all its associated metadata entries.
            </summary> 
        </member>
        <member name="M:OpenData.Controllers.MetadataTypeController.PostAsync(OpenData.Domain.Models.SaveMetadataTypeResource)">
            <summary>
            Allows the creation of a new Metadata Type
            </summary>
        </member>
        <member name="M:OpenData.Controllers.MetadataTypeController.PostAsync(OpenData.Domain.Models.Tag,System.String)">
            <summary>
            Adds a new tag to an existing metadata type.
            </summary>
        </member>
        <member name="M:OpenData.Controllers.UserController.CreateUser(OpenData.Resources.NewUserResource)">
            <summary>
            Creates a user with hashed+salted password.
            Iff the user type is set to municipality and the user has a municipality given mail domain,
            the user will be tied to a municipality.
            </summary>
            <param name="newUser">A new user object which contains username, password and usertype</param>
            <returns>A PrivateSafeUserResource which does not include sensitive info.</returns>
        </member>
        <member name="T:OpenData.Domain.Models.SaveMetadataResource">
            <summary>
            Represents the required fields for the creation of a metadata object
            </summary>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveMetadataResponse.#ctor(OpenData.Domain.Models.Metadata)">
            <summary>
            Creates a success response.
            </summary>
            <param name="metadata">Saved metadata.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveMetadataResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveMetadataTypeResponse.#ctor(OpenData.Domain.Models.MetadataType)">
            <summary>
            Creates a success response.
            </summary>
            <param name="metadata">Saved metadata.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveMetadataTypeResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveTagResponse.#ctor(OpenData.Domain.Models.Tag)">
            <summary>
            Creates a success response.
            </summary>
            <param name="tag">Saved tag.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:OpenData.Domain.Services.Communication.SaveTagResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="T:OpenData.Resources.AuthUserResource">
            <summary>
            Used for loggin user in.
            </summary>
        </member>
        <member name="T:OpenData.Resources.NewUserResource">
            <summary>
            Form for creating new user should never be sent from the server.
            But exclusively used for creating a new user. 
            </summary>
        </member>
        <member name="T:OpenData.Resources.PrivateSafeUserResource">
            <summary>
            Used for safely transporting userdata without passwords, salts and other classified information.
            The Token is a property here, this should never be sent to someone besides the user whom this data belongs to.
            </summary>
        </member>
        <member name="T:OpenData.Resources.SafeUserResource">
            <summary>
            Used for safely transporting userdata without passwords, salts and other classified information.
            SafeUser does not include tokens, meaning it is good for sending a lot of user data to for example a admin panel.
            </summary>
        </member>
    </members>
</doc>
